dist: trusty

# Travis builds are slower using sudo: false (the container-based
# infrastructure) as of March 2017; see
# https://github.com/coq/coq/pull/467 for some discussion.
sudo: required
# Until Ocaml becomes a language, we set a known one.
language: c

cache:
  apt: true
  directories:
  - $HOME/.opam
  - cache

before_cache:
  - rm -rf $HOME/.opam/log/

addons:
  apt:
    sources:
    - avsm
    packages:
    - opam
    - aspcud
    - gcc-multilib

env:
  global:
  - NJOBS=2
  # system is == 4.02.3
  - COMPILER="system"
  - CAMLP5_VER="6.14"
  - PREFIX="-local"
  - CACHE_NAME=default
  # Not ready yet for 8.7
  # - TEST_TARGET="ci-cpdt"
  # - TEST_TARGET="ci-metacoq"
  # - TEST_TARGET="ci-tlc"

matrix:

  allow_failures:
  - env: TEST_TARGET="ci-geocoq"

  include:
    - env: TEST_TARGET="install" PREFIX="-prefix cache"
      stage: build
    - env: TEST_TARGET="validate"
      cache: false
      stage: test
    - env: TEST_TARGET="test-suite" COMPILER="4.02.3+32bit"
      cache: false
      stage: test
    - env: TEST_TARGET="validate"   COMPILER="4.02.3+32bit"
      cache: false
      stage: test
    - env: TEST_TARGET="ci-bedrock-src"
      stage: test
    - env: TEST_TARGET="ci-coquelicot"
      stage: test
    - env: TEST_TARGET="ci-geocoq"
      stage: test
    - env: TEST_TARGET="ci-fiat-crypto"
      stage: test
    # - env: TEST_TARGET="ci-fiat-parsers"
    #   stage: test
    # - env: TEST_TARGET="ci-flocq"
    #   stage: test
    # - env: TEST_TARGET="ci-formal-topology"
    #   stage: test
    # - env: TEST_TARGET="ci-hott"
    #   stage: test
    # - env: TEST_TARGET="ci-iris-coq"
    #   stage: test
    # - env: TEST_TARGET="ci-math-classes"
    #   stage: test
    # - env: TEST_TARGET="ci-math-comp"
    #   stage: test
    # - env: TEST_TARGET="ci-sf"
    #   stage: test
    # - env: TEST_TARGET="ci-unimath"
    #   stage: test
    # - env: TEST_TARGET="ci-vst"
    #   stage: test


    # - stage: test
    #   cache: false
    #   env:
    #   - TEST_TARGET="test-suite"
    #   - EXTRA_CONF="-coqide opt -with-doc yes"
    #   - EXTRA_OPAM="lablgtk-extras hevea"
      # addons:
      #   apt:
      #     sources:
      #     - avsm
      #     packages: &extra-packages
      #     - opam
      #     - aspcud
      #     - libgtk2.0-dev
      #     - libgtksourceview2.0-dev
      #     - texlive-latex-base
      #     - texlive-latex-recommended
      #     - texlive-latex-extra
      #     - texlive-math-extra
      #     - texlive-fonts-recommended
      #     - texlive-fonts-extra
      #     - latex-xcolor
      #     - ghostscript
      #     - transfig
      #     - imagemagick

    # - stage: test
    #   cache: false
    #   env:
    #   - TEST_TARGET="test-suite"
    #   - COMPILER="4.04.1"
    #   - CAMLP5_VER="6.17"
    #   - EXTRA_CONF="-coqide opt -with-doc yes"
    #   - EXTRA_OPAM="lablgtk-extras hevea"
      # addons:
      #   apt:
      #     sources:
      #     - avsm
      #     packages: *extra-packages

    # - stage: test
    #   cache: false
    #   env:
    #   - TEST_TARGET="coqocaml"
    #   - EXTRA_CONF="-coqide opt -warn-error"
    #   - EXTRA_OPAM="lablgtk-extras hevea"
    #   # dummy target
    #   - BUILD_TARGET="clean"
      # addons:
      #   apt:
      #     sources:
      #     - avsm
      #     packages: &coqide-packages
      #     - opam
      #     - aspcud
      #     - libgtk2.0-dev
      #     - libgtksourceview2.0-dev

    # - stage: test
    #   cache: false
    #   env:
    #   - TEST_TARGET="coqocaml"
    #   - COMPILER="4.04.1"
    #   - CAMLP5_VER="6.17"
    #   - EXTRA_CONF="-coqide opt -warn-error"
    #   - EXTRA_OPAM="lablgtk-extras hevea"
    #   # dummy target
    #   - BUILD_TARGET="clean"
      # addons:
      #   apt:
      #     sources:
      #     - avsm
      #     packages: *coqide-packages

install:
- opam init -j ${NJOBS} --compiler=${COMPILER} -n -y
- eval $(opam config env)
- opam config list
- opam install -j ${NJOBS} -y camlp5.${CAMLP5_VER} ocamlfind ${EXTRA_OPAM}
- opam list

script: ./travis.sh

# Testing Gitter webhook
# notifications:
#   webhooks:
#     urls:
#       - https://webhooks.gitter.im/e/3cdabdec318214c7cd63
#     on_success: change  # options: [always|never|change] default: always
#     on_failure: always  # options: [always|never|change] default: always
#     on_start: never     # options: [always|never|change] default: always
