(************************************************************************)
(*         *   The Coq Proof Assistant / The Coq Development Team       *)
(*  v      *         Copyright INRIA, CNRS and contributors             *)
(* <O___,, * (see version control and CREDITS file for authors & dates) *)
(*   \VV/  **************************************************************)
(*    //   *    This file is distributed under the terms of the         *)
(*         *     GNU Lesser General Public License Version 2.1          *)
(*         *     (see LICENSE file for the text of the license)         *)
(************************************************************************)

{

open Stdarg

}

DECLARE PLUGIN "coq-core.plugins.derive"

{

let classify_derive_command _ = Vernacextend.(VtStartProof (Doesn'tGuaranteeOpacity,[]))

let native = Attributes.bool_attribute ~name:"native_compile"

}

VERNAC COMMAND EXTEND Derive CLASSIFIED BY { classify_derive_command } STATE open_proof
| #[ native ] [ "Derive" identref(f) "SuchThat" constr(suchthat) "As" identref(lemma) ] ->
{ let no_native = not (Option.default true native) in
  Derive.start_deriving ~no_native f.CAst.v suchthat lemma.CAst.v }
END
